{"version":3,"file":"index.umd.js","sources":["../src/models/proto/models.ts","../src/utils.ts","../src/models/transactions/attachments/contracts/types.ts","../src/models/transactions/attachments/contracts/utils.ts","../src/models/transactions/attachments/contracts/deployContractAttachment.ts","../src/models/transactions/attachments/contracts/callContractAttachment.ts","../src/models/transactions/attachments/contracts/terminateContractAttachment.ts","../src/crypto.ts","../src/models/transactions/attachments/storeToIpfsAttachment.ts","../src/models/transactions/transaction.ts","../src/models/json/index.ts","../src/providers/utils.ts","../src/providers/provider.ts","../src/providers/bcnProvider.ts","../src/providers/contractProvider.ts","../src/providers/dnaProvider.ts","../src/providers/idenaProvider.ts"],"sourcesContent":["/* eslint-disable */\nimport Long from 'long';\nimport _m0 from 'protobufjs/minimal';\n\nexport const protobufPackage = 'models';\n\nexport interface ProtoTransaction {\n  data: ProtoTransaction_Data | undefined;\n  signature: Uint8Array;\n  useRlp: boolean;\n}\n\nexport interface ProtoTransaction_Data {\n  nonce: number;\n  epoch: number;\n  type: number;\n  to: Uint8Array;\n  amount: Uint8Array;\n  maxFee: Uint8Array;\n  tips: Uint8Array;\n  payload: Uint8Array;\n}\n\nexport interface ProtoDeployContractAttachment {\n  CodeHash: Uint8Array;\n  args: Uint8Array[];\n}\n\nexport interface ProtoCallContractAttachment {\n  method: string;\n  args: Uint8Array[];\n}\n\nexport interface ProtoTerminateContractAttachment {\n  args: Uint8Array[];\n}\n\nexport interface ProtoStoreToIpfsAttachment {\n  cid: Uint8Array;\n  size: number;\n}\n\nfunction createBaseProtoTransaction(): ProtoTransaction {\n  return { data: undefined, signature: new Uint8Array(), useRlp: false };\n}\n\nexport const ProtoTransaction = {\n  encode(\n    message: ProtoTransaction,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.data !== undefined) {\n      ProtoTransaction_Data.encode(\n        message.data,\n        writer.uint32(10).fork(),\n      ).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    if (message.useRlp === true) {\n      writer.uint32(24).bool(message.useRlp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ProtoTransaction {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = ProtoTransaction_Data.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        case 3:\n          message.useRlp = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction>, I>>(\n    object: I,\n  ): ProtoTransaction {\n    const message = createBaseProtoTransaction();\n    message.data =\n      object.data !== undefined && object.data !== null\n        ? ProtoTransaction_Data.fromPartial(object.data)\n        : undefined;\n    message.signature = object.signature ?? new Uint8Array();\n    message.useRlp = object.useRlp ?? false;\n    return message;\n  },\n};\n\nfunction createBaseProtoTransaction_Data(): ProtoTransaction_Data {\n  return {\n    nonce: 0,\n    epoch: 0,\n    type: 0,\n    to: new Uint8Array(),\n    amount: new Uint8Array(),\n    maxFee: new Uint8Array(),\n    tips: new Uint8Array(),\n    payload: new Uint8Array(),\n  };\n}\n\nexport const ProtoTransaction_Data = {\n  encode(\n    message: ProtoTransaction_Data,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.nonce !== 0) {\n      writer.uint32(8).uint32(message.nonce);\n    }\n    if (message.epoch !== 0) {\n      writer.uint32(16).uint32(message.epoch);\n    }\n    if (message.type !== 0) {\n      writer.uint32(24).uint32(message.type);\n    }\n    if (message.to.length !== 0) {\n      writer.uint32(34).bytes(message.to);\n    }\n    if (message.amount.length !== 0) {\n      writer.uint32(42).bytes(message.amount);\n    }\n    if (message.maxFee.length !== 0) {\n      writer.uint32(50).bytes(message.maxFee);\n    }\n    if (message.tips.length !== 0) {\n      writer.uint32(58).bytes(message.tips);\n    }\n    if (message.payload.length !== 0) {\n      writer.uint32(66).bytes(message.payload);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTransaction_Data {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint32();\n          break;\n        case 2:\n          message.epoch = reader.uint32();\n          break;\n        case 3:\n          message.type = reader.uint32();\n          break;\n        case 4:\n          message.to = reader.bytes();\n          break;\n        case 5:\n          message.amount = reader.bytes();\n          break;\n        case 6:\n          message.maxFee = reader.bytes();\n          break;\n        case 7:\n          message.tips = reader.bytes();\n          break;\n        case 8:\n          message.payload = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction_Data>, I>>(\n    object: I,\n  ): ProtoTransaction_Data {\n    const message = createBaseProtoTransaction_Data();\n    message.nonce = object.nonce ?? 0;\n    message.epoch = object.epoch ?? 0;\n    message.type = object.type ?? 0;\n    message.to = object.to ?? new Uint8Array();\n    message.amount = object.amount ?? new Uint8Array();\n    message.maxFee = object.maxFee ?? new Uint8Array();\n    message.tips = object.tips ?? new Uint8Array();\n    message.payload = object.payload ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseProtoDeployContractAttachment(): ProtoDeployContractAttachment {\n  return { CodeHash: new Uint8Array(), args: [] };\n}\n\nexport const ProtoDeployContractAttachment = {\n  encode(\n    message: ProtoDeployContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.CodeHash.length !== 0) {\n      writer.uint32(10).bytes(message.CodeHash);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoDeployContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoDeployContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.CodeHash = reader.bytes();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoDeployContractAttachment>, I>>(\n    object: I,\n  ): ProtoDeployContractAttachment {\n    const message = createBaseProtoDeployContractAttachment();\n    message.CodeHash = object.CodeHash ?? new Uint8Array();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoCallContractAttachment(): ProtoCallContractAttachment {\n  return { method: '', args: [] };\n}\n\nexport const ProtoCallContractAttachment = {\n  encode(\n    message: ProtoCallContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.method !== '') {\n      writer.uint32(10).string(message.method);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoCallContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoCallContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.method = reader.string();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoCallContractAttachment>, I>>(\n    object: I,\n  ): ProtoCallContractAttachment {\n    const message = createBaseProtoCallContractAttachment();\n    message.method = object.method ?? '';\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoTerminateContractAttachment(): ProtoTerminateContractAttachment {\n  return { args: [] };\n}\n\nexport const ProtoTerminateContractAttachment = {\n  encode(\n    message: ProtoTerminateContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    for (const v of message.args) {\n      writer.uint32(10).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTerminateContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTerminateContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<\n    I extends Exact<DeepPartial<ProtoTerminateContractAttachment>, I>,\n  >(object: I): ProtoTerminateContractAttachment {\n    const message = createBaseProtoTerminateContractAttachment();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoStoreToIpfsAttachment(): ProtoStoreToIpfsAttachment {\n  return { cid: new Uint8Array(), size: 0 };\n}\n\nexport const ProtoStoreToIpfsAttachment = {\n  encode(\n    message: ProtoStoreToIpfsAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.cid.length !== 0) {\n      writer.uint32(10).bytes(message.cid);\n    }\n    if (message.size !== 0) {\n      writer.uint32(16).uint32(message.size);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoStoreToIpfsAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoStoreToIpfsAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.cid = reader.bytes();\n          break;\n        case 2:\n          message.size = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoStoreToIpfsAttachment>, I>>(\n    object: I,\n  ): ProtoStoreToIpfsAttachment {\n    const message = createBaseProtoStoreToIpfsAttachment();\n    message.cid = object.cid ?? new Uint8Array();\n    message.size = object.size ?? 0;\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","import BN from 'bn.js';\nimport Decimal from 'decimal.js';\n\nDecimal.set({ toExpPos: 10000 });\n\nexport const DNA_BASE = '1000000000000000000';\n\nfunction isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x';\n}\n\nexport function stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\nexport function hexToUint8Array(hexString: string): Uint8Array {\n  const str = stripHexPrefix(hexString);\n\n  const arrayBuffer = new Uint8Array(str.length / 2);\n\n  for (let i = 0; i < str.length; i += 2) {\n    const byteValue = parseInt(str.substring(i, i + 2), 16);\n    arrayBuffer[i / 2] = byteValue;\n  }\n\n  return arrayBuffer;\n}\n\nexport function toHexString(\n  byteArray: Uint8Array | number[],\n  withPrefix = true,\n) {\n  return (\n    (withPrefix ? '0x' : '') +\n    Array.from(byteArray, function (byte) {\n      return `0${(byte & 0xff).toString(16)}`.slice(-2);\n    }).join('')\n  );\n}\n\nexport function floatStringToDna(value: string) {\n  const decimalValue = new Decimal(value).mul(new Decimal(DNA_BASE)).toString();\n  return new BN(decimalValue);\n}\n\nexport function dnaToFloatString(value: BN | string) {\n  const bn = new BN(value);\n  return new Decimal(bn.toString(10)).div(new Decimal(DNA_BASE)).toString();\n}\n\nexport function calculateGasCost(feePerGas: BN | string, gas: number): string {\n  const bn = new BN(feePerGas);\n  return bn.mul(new BN(gas)).toString();\n}\n","export enum EmbeddedContractType {\n  TimeLockContract = 1,\n  OracleVotingContract = 2,\n  OracleLockContract = 3,\n  RefundableOracleLockContract = 4,\n  MultisigContract = 5,\n}\n\nexport enum ContractArgumentFormat {\n  Default = 'default',\n  Byte = 'byte',\n  Int8 = 'int8',\n  Uint64 = 'uint64',\n  Int64 = 'int64',\n  String = 'string',\n  Bigint = 'bigint',\n  Hex = 'hex',\n  Dna = 'dna',\n}\n\nexport interface ContractArgument {\n  index: number;\n  format: ContractArgumentFormat;\n  value: any;\n}\n","import BN from 'bn.js';\nimport Decimal from 'decimal.js';\nimport {\n  dnaToFloatString,\n  floatStringToDna,\n  hexToUint8Array,\n  toHexString,\n} from '../../../../utils';\nimport { ContractArgument, ContractArgumentFormat } from './types';\n\nDecimal.set({ toExpPos: 10000 });\n\nexport function argumentFromBytes(\n  format: ContractArgumentFormat,\n  index: number,\n  bytes: Uint8Array,\n): ContractArgument {\n  if (bytes.length === 0) {\n    return {\n      format,\n      index,\n      value: null,\n    };\n  }\n  switch (format) {\n    case 'byte': {\n      return {\n        format: ContractArgumentFormat.Byte,\n        index: index,\n        value: bytes[0],\n      };\n    }\n    case 'int8': {\n      return {\n        format: ContractArgumentFormat.Int8,\n        index: index,\n        value: bytes[0],\n      };\n    }\n    case 'uint64': {\n      const res = Buffer.from(bytes).readBigUint64LE();\n      return {\n        format: ContractArgumentFormat.Uint64,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'int64': {\n      const res = Buffer.from(bytes).readBigInt64LE();\n      return {\n        format: ContractArgumentFormat.Int64,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'string': {\n      const res = utf8ByteArrayToString(bytes);\n      return {\n        format: ContractArgumentFormat.String,\n        index: index,\n        value: res,\n      };\n    }\n    case 'bigint': {\n      const res = new BN(bytes);\n      return {\n        format: ContractArgumentFormat.Bigint,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'hex': {\n      return {\n        format: ContractArgumentFormat.Hex,\n        index: index,\n        value: toHexString(bytes),\n      };\n    }\n    case 'dna': {\n      const bn = new BN(bytes);\n      return {\n        format: ContractArgumentFormat.Dna,\n        index: index,\n        value: dnaToFloatString(bn),\n      };\n    }\n    default: {\n      return {\n        format: ContractArgumentFormat.Default,\n        index: index,\n        value: toHexString(bytes),\n      };\n    }\n  }\n}\n\nexport function argumentsFromBytes(\n  formats: ContractArgumentFormat[],\n  bytes: Uint8Array[],\n): ContractArgument[] {\n  return formats.map((format, idx) =>\n    argumentFromBytes(format, idx, bytes[idx] || new Uint8Array()),\n  );\n}\n\nexport function argumentToBytes(data: ContractArgument): Uint8Array {\n  try {\n    switch (data.format) {\n      case 'byte': {\n        const val = parseInt(data.value, 10);\n        if (val >= 0 && val <= 255) {\n          return new Uint8Array([val]);\n        }\n        throw new Error('invalid byte value');\n      }\n      case 'int8': {\n        const val = parseInt(data.value, 10);\n        if (val >= 0 && val <= 255) {\n          return new Uint8Array([val]);\n        }\n        throw new Error('invalid int8 value');\n      }\n      case 'uint64': {\n        const res = new BN(data.value);\n        if (res.isNeg()) throw new Error('invalid uint64 value');\n        const buf = Buffer.alloc(8);\n        buf.writeBigUint64LE(BigInt(res.toString()));\n        return new Uint8Array(buf);\n      }\n      case 'int64': {\n        const buf = Buffer.alloc(8);\n        buf.writeBigInt64LE(BigInt(new BN(data.value).toString()));\n        return new Uint8Array(buf);\n      }\n      case 'string': {\n        return stringToUtf8ByteArray(data.value);\n      }\n      case 'bigint': {\n        return new Uint8Array(new BN(data.value).toArray());\n      }\n      case 'hex': {\n        return new Uint8Array([...hexToUint8Array(data.value)]);\n      }\n      case 'dna': {\n        return new Uint8Array(floatStringToDna(data.value).toArray());\n      }\n      default: {\n        return new Uint8Array([...hexToUint8Array(data.value)]);\n      }\n    }\n  } catch (e) {\n    throw new Error(\n      `cannot parse ${data.format} at index ${data.index}: ${\n        (e as Error)?.message\n      }`,\n    );\n  }\n}\n\nexport function argumentsToBytes(args: ContractArgument[]): Uint8Array[] {\n  const maxIndex = Math.max(...args.map((x) => x.index));\n\n  const result: Uint8Array[] = new Array(maxIndex).fill(null);\n\n  args.forEach((element) => {\n    result[element.index] = argumentToBytes(element);\n  });\n\n  return result;\n}\n\n/**\n * Converts a JS string to a UTF-8 \"byte\" array.\n * @param {string} str 16-bit unicode string.\n * @return {!Uint8Array} UTF-8 byte array.\n */\nfunction stringToUtf8ByteArray(str: string): Uint8Array {\n  const out = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) == 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return new Uint8Array(out);\n}\n\n/**\n * Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n * @param {Uint8Array} bytes UTF-8 byte array.\n * @return {string} 16-bit Unicode string.\n */\nfunction utf8ByteArrayToString(bytes: Uint8Array): string {\n  const out = [];\n  let pos = 0;\n  let c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++] || 0;\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++] || 0;\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++] || 0;\n      const c3 = bytes[pos++] || 0;\n      const c4 = bytes[pos++] || 0;\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++] || 0;\n      const c3 = bytes[pos++] || 0;\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63),\n      );\n    }\n  }\n  return out.join('');\n}\n","import { ProtoDeployContractAttachment } from '../../../proto/models';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\nimport type {\n  ContractArgumentFormat,\n  ContractArgument,\n  EmbeddedContractType,\n} from './types';\n\nexport class DeployContractAttachment {\n  private _codeHash: EmbeddedContractType;\n  private _args: Uint8Array[];\n\n  constructor(\n    init?: Partial<{ codeHash: EmbeddedContractType; args: Uint8Array[] }>,\n  ) {\n    this._codeHash = init?.codeHash || 0;\n    this._args = init?.args || [];\n  }\n\n  public set codeHash(codeHash: number) {\n    this._codeHash = codeHash;\n  }\n\n  public get codeHash(): number {\n    return this._codeHash;\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoDeployContractAttachment.decode(bytes);\n\n    this._codeHash = protoAttachment.CodeHash[0] || 0;\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoDeployContractAttachment.fromPartial({\n      CodeHash: new Uint8Array([this._codeHash]),\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoDeployContractAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoCallContractAttachment } from '../../../proto/models';\nimport type { ContractArgument, ContractArgumentFormat } from './types';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\n\nexport class CallContractAttachment {\n  private _method: string;\n  private _args: Uint8Array[];\n\n  constructor(init?: Partial<{ method: string; args: Uint8Array[] }>) {\n    this._method = init?.method || '';\n    this._args = init?.args || [];\n  }\n\n  public set method(method: string) {\n    this._method = method;\n  }\n\n  public get method(): string {\n    return this._method;\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n    return this;\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoCallContractAttachment.decode(bytes);\n\n    this._method = protoAttachment.method;\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoCallContractAttachment.fromPartial({\n      method: this._method,\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoCallContractAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoTerminateContractAttachment } from '../../../proto/models';\nimport type { ContractArgument, ContractArgumentFormat } from './types';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\n\nexport class TerminateContractAttachment {\n  private _args: Uint8Array[];\n\n  constructor(init?: Partial<{ args: Uint8Array[] }>) {\n    this._args = init?.args || [];\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoTerminateContractAttachment.decode(bytes);\n\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoTerminateContractAttachment.fromPartial({\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoTerminateContractAttachment.encode(attachment).finish();\n  }\n}\n","import sha3 from 'js-sha3';\nimport { hexToUint8Array, toHexString } from './utils';\nimport secp256k1 from 'secp256k1';\n\nfunction getKeyArray(key: Uint8Array | number[] | string): Uint8Array {\n  return typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key);\n}\n\nexport function privateKeyToPublicKey(\n  key: Uint8Array | number[] | string,\n  withPrefix = false,\n) {\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n  return toHexString(pubKey, withPrefix);\n}\n\nexport function publicKeyToAddress(\n  publicKey: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  return toHexString(\n    sha3.keccak_256.array(getKeyArray(publicKey).slice(1)).slice(12),\n    withPrefix,\n  );\n}\n\nexport function privateKeyToAddress(\n  key: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  if (!key) {\n    return '0x0000000000000000000000000000000000000000';\n  }\n\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sender(\n  data: Uint8Array | number[],\n  signature: Uint8Array | number[],\n  withPrefix = true,\n) {\n  const hash = sha3.keccak_256.array(data);\n  const pubKey = secp256k1.ecdsaRecover(\n    new Uint8Array(signature).slice(0, -1),\n    Number(signature[signature.length - 1]),\n    new Uint8Array(hash),\n    false,\n  );\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sign(\n  data: Uint8Array | number[],\n  key: Uint8Array | number[] | string,\n): Uint8Array {\n  const hash = sha3.keccak_256.array(data);\n  const { signature, recid } = secp256k1.ecdsaSign(\n    new Uint8Array(hash),\n    typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key),\n  );\n\n  return new Uint8Array([...signature, recid]);\n}\n","import { ProtoStoreToIpfsAttachment } from '../../proto/models';\nimport type { EmbeddedContractType } from './contracts/types';\n\nexport class StoreToIpfsAttachment {\n  private _size: number;\n  private _cid: Uint8Array;\n\n  constructor(init?: Partial<{ size: EmbeddedContractType; cid: Uint8Array }>) {\n    this._size = init?.size || 0;\n    this._cid = init?.cid || new Uint8Array();\n  }\n\n  public set size(size: number) {\n    this._size = size;\n  }\n\n  public get size(): number {\n    return this._size;\n  }\n\n  public set cid(cid: Uint8Array) {\n    this._cid = cid;\n  }\n\n  public get cid(): Uint8Array {\n    return this._cid;\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoStoreToIpfsAttachment.decode(bytes);\n\n    this._cid = protoAttachment.cid;\n    this._size = protoAttachment.size;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoStoreToIpfsAttachment.fromPartial({\n      cid: this._cid,\n      size: this._size,\n    });\n    return ProtoStoreToIpfsAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoTransaction, ProtoTransaction_Data } from '../proto/models';\nimport BN from 'bn.js';\nimport { floatStringToDna, hexToUint8Array, toHexString } from '../../utils';\nimport sha3 from 'js-sha3';\nimport { sender, sign } from '../../crypto';\nimport type { JsonTransaction } from '../json';\nimport { StoreToIpfsAttachment } from './attachments/storeToIpfsAttachment';\n\nexport enum TransactionType {\n  SendTx = 0x0,\n  ActivationTx = 0x1,\n  InviteTx = 0x2,\n  KillTx = 0x3,\n  SubmitFlipTx = 0x4,\n  SubmitAnswersHashTx = 0x5,\n  SubmitShortAnswersTx = 0x6,\n  SubmitLongAnswersTx = 0x7,\n  EvidenceTx = 0x8,\n  OnlineStatusTx = 0x9,\n  KillInviteeTx = 0xa,\n  ChangeGodAddressTx = 0xb,\n  BurnTx = 0xc,\n  ChangeProfileTx = 0xd,\n  DeleteFlipTx = 0xe,\n  DeployContractTx = 0xf,\n  CallContractTx = 0x10,\n  TerminateContractTx = 0x11,\n  DelegateTx = 0x12,\n  UndelegateTx = 0x13,\n  KillDelegatorTx = 0x14,\n  StoreToIpfsTx = 0x15,\n}\n\nexport class Transaction {\n  private _nonce = 0;\n  private _epoch = 0;\n  private _type: TransactionType | number = 0;\n  private _to: Uint8Array | null = null;\n  private _amount: BN | null = null;\n  private _maxFee: BN | null = null;\n  private _tips: BN | null = null;\n  private _payload: Uint8Array | null = null;\n\n  private _signature: Uint8Array | null = null;\n\n  constructor(\n    init?: Partial<{\n      nonce: number;\n      epoch: number;\n      type: TransactionType;\n      to: Uint8Array | string;\n      amount: Uint8Array | string | number | BN;\n      maxFee: Uint8Array | string | number | BN;\n      tips: Uint8Array | string | number | BN;\n      payload: Uint8Array | number[];\n    }>,\n  ) {\n    this.nonce = init?.nonce ?? 0;\n    this.epoch = init?.epoch ?? 0;\n    this.type = init?.type ?? 0;\n    this.to = init?.to ?? null;\n    this.amount = init?.amount ?? null;\n    this.maxFee = init?.maxFee ?? null;\n    this.tips = init?.tips ?? null;\n    this.payload = init?.payload ? new Uint8Array(init.payload) : null;\n  }\n\n  public set nonce(nonce: number) {\n    this._nonce = nonce;\n  }\n\n  public get nonce(): number {\n    return this._nonce;\n  }\n\n  public set epoch(epoch: number) {\n    this._epoch = epoch;\n  }\n\n  public get epoch(): number {\n    return this._epoch;\n  }\n\n  public set type(type: TransactionType) {\n    this._type = type;\n  }\n\n  public get type(): number {\n    return this._type;\n  }\n\n  public set to(to: string | Uint8Array | null) {\n    if (to === null) this._to = null;\n    else if (to instanceof Uint8Array) this._to = to;\n    else this._to = hexToUint8Array(to);\n  }\n\n  public get to(): string | null {\n    return this._to && this._to.length > 0 ? toHexString(this._to, true) : null;\n  }\n\n  public set amount(amount: number | string | BN | Uint8Array | null) {\n    this._amount = amount !== null ? new BN(amount) : null;\n  }\n\n  public get amount(): BN | null {\n    return this._amount;\n  }\n\n  public set maxFee(maxFee: number | string | BN | Uint8Array | null) {\n    this._maxFee = maxFee !== null ? new BN(maxFee) : null;\n  }\n\n  public get maxFee(): BN | null {\n    return this._maxFee;\n  }\n\n  public set tips(tips: number | string | BN | Uint8Array | null) {\n    this._tips = tips !== null ? new BN(tips) : null;\n  }\n\n  public get tips(): BN | null {\n    return this._tips;\n  }\n\n  public set payload(payload: Uint8Array | null) {\n    this._payload = payload;\n  }\n\n  public get payload(): Uint8Array | null {\n    return this._payload ? new Uint8Array(this._payload) : null;\n  }\n\n  public get signature(): Uint8Array | null {\n    return this._signature;\n  }\n\n  get hash() {\n    return Buffer.from(sha3.keccak_256.array(this.toBytes())).toString('hex');\n  }\n\n  get sender() {\n    try {\n      if (!this._signature || this._signature.length === 0) return null;\n\n      const data = ProtoTransaction_Data.encode(\n        this._createProtoTxData(),\n      ).finish();\n\n      return sender(data, this._signature, true);\n    } catch {\n      return null;\n    }\n  }\n\n  get gas() {\n    const bytes = this.toBytes();\n    let size = bytes.length;\n    if (!this._signature || this._signature.length === 0) size += 67;\n    if (this.type === TransactionType.DeleteFlipTx) size += 1024 * 120;\n    if (this.type === TransactionType.StoreToIpfsTx) {\n      const maxSize = 1024 * 1024;\n      try {\n        if (this.payload) {\n          const attachment = new StoreToIpfsAttachment().fromBytes(\n            this.payload,\n          );\n          size += attachment.size * 0.2 || maxSize;\n        } else {\n          size += maxSize;\n        }\n      } catch (e) {\n        size += maxSize;\n      }\n    }\n    return ~~size * 10;\n  }\n\n  static fromHex(hex: string): Transaction {\n    return new Transaction().fromHex(hex);\n  }\n\n  static fromBytes(bytes: Uint8Array): Transaction {\n    return new Transaction().fromBytes(bytes);\n  }\n\n  public fromHex(hex: string): Transaction {\n    return this.fromBytes(hexToUint8Array(hex));\n  }\n\n  public fromBytes(bytes: Uint8Array): Transaction {\n    const protoTx = ProtoTransaction.decode(bytes);\n    const protoTxData = protoTx.data;\n\n    if (protoTxData) {\n      this.nonce = protoTxData.nonce;\n      this.epoch = protoTxData.epoch;\n      this.type = protoTxData.type;\n      this.to = protoTxData.to;\n      this.amount = protoTxData.amount;\n      this.maxFee = protoTxData.maxFee;\n      this.tips = protoTxData.tips;\n      this.payload = protoTxData.payload;\n    }\n\n    this._signature = protoTx.signature;\n\n    return this;\n  }\n\n  public fromJson(jsonTx: JsonTransaction): Transaction {\n    function getTxType(type: string): TransactionType {\n      if (!type?.length) return TransactionType.SendTx;\n      const stringType = type[0]?.toUpperCase() + type.slice(1) + 'Tx';\n      return <TransactionType>(\n        (Object.entries(TransactionType).find(\n          ([key]) => key === stringType,\n        )?.[1] || TransactionType.SendTx)\n      );\n    }\n\n    this.nonce = jsonTx.nonce;\n    this.epoch = jsonTx.epoch;\n    this.type = getTxType(jsonTx.type);\n    this.to = jsonTx.to;\n    this.amount = floatStringToDna(jsonTx.amount);\n    this.maxFee = floatStringToDna(jsonTx.maxFee);\n    this.tips = floatStringToDna(jsonTx.tips);\n    this.payload = hexToUint8Array(jsonTx.payload);\n\n    return this;\n  }\n\n  public toBytes(): Uint8Array {\n    const tx = ProtoTransaction.fromPartial({\n      data: this._createProtoTxData(),\n      signature: this._signature ?? new Uint8Array(),\n    });\n    return ProtoTransaction.encode(tx).finish();\n  }\n\n  public sign(key: string | Uint8Array | number[]): Transaction {\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n    this._signature = sign(data, key);\n    return this;\n  }\n\n  public toHex(withPrefix = true): string {\n    return toHexString(this.toBytes(), withPrefix);\n  }\n\n  private _createProtoTxData(): ProtoTransaction_Data {\n    return ProtoTransaction_Data.fromPartial({\n      epoch: this._epoch,\n      nonce: this._nonce,\n      type: this._type,\n      to: this._to ?? new Uint8Array(),\n      amount: new Uint8Array(\n        !this._amount || this._amount.isZero() ? [] : this._amount.toArray(),\n      ),\n      maxFee: new Uint8Array(\n        !this._maxFee || this._maxFee.isZero() ? [] : this._maxFee.toArray(),\n      ),\n      tips: new Uint8Array(\n        !this._tips || this._tips.isZero() ? [] : this._tips.toArray(),\n      ),\n      payload: this._payload ?? new Uint8Array(),\n    });\n  }\n}\n","export class JsonBlock {\n  constructor(\n    public coinbase: string,\n    public hash: string,\n    public parentHash: string,\n    public height: number,\n    public root: string,\n    public identityRoot: string,\n    public ipfsCid: string,\n    public transactions: string[],\n    public flags: string[],\n    public isEmpty: boolean,\n    public offlineAddress: string,\n  ) {}\n}\n\nexport class JsonTransaction {\n  constructor(\n    public hash: string,\n    public type: string,\n    public from: string,\n    public to: string,\n    public amount: string,\n    public tips: string,\n    public maxFee: string,\n    public nonce: number,\n    public epoch: number,\n    public payload: string,\n    public blockHash: string,\n    public usedFee: string,\n    public timestamp: number,\n  ) {}\n}\n\nexport class JsonReceipt {\n  constructor(\n    public contract: string,\n    public method: string,\n    public success: boolean,\n    public gasUsed: number,\n    public txHash: string,\n    public error: string,\n    public gasCost: string,\n    public txFee: number,\n  ) {}\n}\n\nexport class JsonBalance {\n  constructor(\n    public stake: string,\n    public balance: string,\n    public nonce: number,\n    public mempoolNonce: number,\n  ) {}\n}\n\nclass JsonFlipWords {\n  constructor(\n    public words: number[],\n    public used: boolean,\n    public id: number,\n  ) {}\n}\n\nclass JsonTxAddr {\n  constructor(public TxHash: string, public Address: string) {}\n}\n\nclass JsonInviter {\n  constructor(\n    public txHash: string,\n    public address: string,\n    public epochHeight: number,\n  ) {}\n}\n\nexport class JsonIdentity {\n  constructor(\n    public address: string,\n    public profileHash: string,\n    public stake: string,\n    public invites: number,\n    public age: number,\n    public state: string,\n    public pubkey: string,\n    public requiredFlips: number,\n    public availableFlips: number,\n    public flipKeyWordPairs: JsonFlipWords[],\n    public madeFlips: number,\n    public totalQualifiedFlips: number,\n    public totalShortFlipPoints: number,\n    public flips: string[],\n    public online: boolean,\n    public generation: number,\n    public code: string,\n    public invitees: JsonTxAddr[],\n    public penalty: string,\n    public lastValidationFlags: string[],\n    public delegatee: string,\n    public delegationEpoch: number,\n    public delegationNonce: number,\n    public isPool: boolean,\n    public inviter: JsonInviter,\n    public shardId: number,\n  ) {}\n}\n\nexport class JsonEpoch {\n  constructor(\n    public startBlock: number,\n    public epoch: number,\n    public nextValidation: string,\n    public currentPeriod: string,\n  ) {}\n}\n\nexport class JsonIterateMapItem {\n  constructor(public key: string, public value: string) {}\n}\nexport class JsonIterateMap {\n  constructor(\n    public items: JsonIterateMapItem[],\n    public continuationToken: string,\n  ) {}\n}\n","import axios from 'axios';\n\nexport function createAxiosInstance(url: string, apiKey: string) {\n  const res = axios.create({ baseURL: url });\n  res.interceptors.request.use(function (config) {\n    config.data.key = apiKey;\n    return config;\n  });\n  return res;\n}\n","import type { AxiosInstance } from 'axios';\nimport axios from 'axios';\n\nexport class BaseProvider {\n  protected _httpProvider: AxiosInstance;\n\n  constructor(httpProvider: AxiosInstance) {\n    this._httpProvider = httpProvider;\n  }\n\n  public async doRequest(obj: { method: string; params: any; id?: number }) {\n    try {\n      if (!obj.id) obj.id = 1;\n\n      const { data } = await this._httpProvider.post('/', obj);\n\n      const { result, error } = data;\n      if (error) throw new Error(error.message);\n\n      return result;\n    } catch (e) {\n      if (axios.isAxiosError(e)) {\n        if (e.response) {\n          throw new Error(e.response.data as any);\n        } else if (e.request) {\n          throw new Error('node is unavailable');\n        } else throw new Error(e.message);\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n","import { Transaction, TransactionType } from '../models';\nimport type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\nimport { toHexString } from '../utils';\nimport type { JsonBlock, JsonTransaction, JsonReceipt } from '../models/json';\n\nexport class BcnProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new BcnProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async buildTx(\n    data: Partial<{\n      from: string;\n      to: string;\n      epoch: number;\n      nonce: number;\n      type: TransactionType;\n      amount: string;\n      maxFee: string;\n      tips: string;\n      payload: number[] | Uint8Array;\n    }>,\n  ): Promise<Transaction> {\n    const params: any = data;\n    if (data.payload) params.payload = toHexString(data.payload);\n    params.useProto = true;\n\n    const result = await this.doRequest({\n      method: 'bcn_getRawTx',\n      params: [params],\n    });\n    return new Transaction().fromHex(result);\n  }\n\n  public async sendTx(tx: Transaction): Promise<string> {\n    const result = await this.doRequest({\n      method: 'bcn_sendRawTx',\n      params: [tx.toHex(true)],\n    });\n\n    return result;\n  }\n\n  public async estimateTx(\n    tx: Transaction,\n  ): Promise<{ receipt: JsonReceipt; txHash: string; txFee: string }> {\n    const result = await this.doRequest({\n      method: 'bcn_estimateRawTx',\n      params: [tx.toHex(true)],\n    });\n\n    return result;\n  }\n\n  public async blockAt(num: number): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_blockAt',\n      params: [num],\n    });\n\n    return result;\n  }\n\n  public async block(hash: string): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_block',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async lastBlock(): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_lastBlock',\n      params: [],\n    });\n\n    return result;\n  }\n\n  public async transaction(hash: string): Promise<JsonTransaction> {\n    const result = await this.doRequest({\n      method: 'bcn_transaction',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async receipt(hash: string): Promise<JsonReceipt> {\n    const result = await this.doRequest({\n      method: 'bcn_txReceipt',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async feePerGas(): Promise<string> {\n    const result = await this.doRequest({\n      method: 'bcn_feePerGas',\n      params: [],\n    });\n\n    return result;\n  }\n}\n","import type {\n  ContractArgument,\n  ContractArgumentFormat,\n  JsonIterateMap,\n} from '../models';\nimport type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\n\nexport class ContractProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new ContractProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async readData(\n    address: string,\n    key: string,\n    format: ContractArgumentFormat,\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readData',\n      params: [address, key, format],\n    });\n\n    return result;\n  }\n\n  public async readonlyCall(\n    address: string,\n    method: string,\n    format: ContractArgumentFormat,\n    args: ContractArgument[],\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readonlyCall',\n      params: [{ contract: address, method, format, args }],\n    });\n\n    return result;\n  }\n\n  public async readMap(\n    address: string,\n    mapName: string,\n    key: string,\n    format: ContractArgumentFormat,\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readMap',\n      params: [address, mapName, key, format],\n    });\n\n    return result;\n  }\n\n  public async iterateMap(\n    address: string,\n    mapName: string,\n    keyFormat: ContractArgumentFormat,\n    valueFormat: ContractArgumentFormat,\n    limit = 10,\n    continuationToken = '0x',\n  ): Promise<JsonIterateMap> {\n    const result = await this.doRequest({\n      method: 'contract_iterateMap',\n      params: [\n        address,\n        mapName,\n        continuationToken,\n        keyFormat,\n        valueFormat,\n        limit,\n      ],\n    });\n\n    return result;\n  }\n}\n","import type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\nimport type { JsonBalance, JsonEpoch, JsonIdentity } from '../models';\n\nexport class DnaProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new DnaProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async balance(address: string): Promise<JsonBalance> {\n    const result = await this.doRequest({\n      method: 'dna_getBalance',\n      params: [address],\n    });\n\n    return result;\n  }\n\n  public async identity(address?: string): Promise<JsonIdentity> {\n    const result = await this.doRequest({\n      method: 'dna_identity',\n      params: address ? [address] : [],\n    });\n\n    return result;\n  }\n\n  public async epoch(): Promise<JsonEpoch> {\n    const result = await this.doRequest({\n      method: 'dna_epoch',\n      params: [],\n    });\n\n    return result;\n  }\n}\n","import type { AxiosInstance } from 'axios';\nimport { BcnProvider } from './bcnProvider';\nimport { ContractProvider } from './contractProvider';\nimport { DnaProvider } from './dnaProvider';\nimport { BaseProvider } from './provider';\nimport { createAxiosInstance } from './utils';\n\nexport class IdenaProvider extends BaseProvider {\n  private _bcnProvider: BcnProvider;\n  private _contractProvider: ContractProvider;\n  private _dnaProvider: DnaProvider;\n\n  public get Blockchain(): BcnProvider {\n    return this._bcnProvider;\n  }\n\n  public get Contract(): ContractProvider {\n    return this._contractProvider;\n  }\n\n  public get Dna(): DnaProvider {\n    return this._dnaProvider;\n  }\n\n  static create(url: string, apiKey: string): IdenaProvider {\n    return new IdenaProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n    this._bcnProvider = new BcnProvider(httpProvider);\n    this._contractProvider = new ContractProvider(httpProvider);\n    this._dnaProvider = new DnaProvider(httpProvider);\n  }\n}\n"],"names":["_m0","Long","Decimal","BN","EmbeddedContractType","ContractArgumentFormat","secp256k1","sha3","TransactionType","axios"],"mappings":"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"}