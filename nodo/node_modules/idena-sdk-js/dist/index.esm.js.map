{"version":3,"file":"index.esm.js","sources":["../src/models/proto/models.ts","../src/utils.ts","../src/models/transactions/attachments/contracts/types.ts","../src/models/transactions/attachments/contracts/utils.ts","../src/models/transactions/attachments/contracts/deployContractAttachment.ts","../src/models/transactions/attachments/contracts/callContractAttachment.ts","../src/models/transactions/attachments/contracts/terminateContractAttachment.ts","../src/crypto.ts","../src/models/transactions/attachments/storeToIpfsAttachment.ts","../src/models/transactions/transaction.ts","../src/models/json/index.ts","../src/providers/utils.ts","../src/providers/provider.ts","../src/providers/bcnProvider.ts","../src/providers/contractProvider.ts","../src/providers/dnaProvider.ts","../src/providers/idenaProvider.ts"],"sourcesContent":["/* eslint-disable */\nimport Long from 'long';\nimport _m0 from 'protobufjs/minimal';\n\nexport const protobufPackage = 'models';\n\nexport interface ProtoTransaction {\n  data: ProtoTransaction_Data | undefined;\n  signature: Uint8Array;\n  useRlp: boolean;\n}\n\nexport interface ProtoTransaction_Data {\n  nonce: number;\n  epoch: number;\n  type: number;\n  to: Uint8Array;\n  amount: Uint8Array;\n  maxFee: Uint8Array;\n  tips: Uint8Array;\n  payload: Uint8Array;\n}\n\nexport interface ProtoDeployContractAttachment {\n  CodeHash: Uint8Array;\n  args: Uint8Array[];\n}\n\nexport interface ProtoCallContractAttachment {\n  method: string;\n  args: Uint8Array[];\n}\n\nexport interface ProtoTerminateContractAttachment {\n  args: Uint8Array[];\n}\n\nexport interface ProtoStoreToIpfsAttachment {\n  cid: Uint8Array;\n  size: number;\n}\n\nfunction createBaseProtoTransaction(): ProtoTransaction {\n  return { data: undefined, signature: new Uint8Array(), useRlp: false };\n}\n\nexport const ProtoTransaction = {\n  encode(\n    message: ProtoTransaction,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.data !== undefined) {\n      ProtoTransaction_Data.encode(\n        message.data,\n        writer.uint32(10).fork(),\n      ).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    if (message.useRlp === true) {\n      writer.uint32(24).bool(message.useRlp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ProtoTransaction {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = ProtoTransaction_Data.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        case 3:\n          message.useRlp = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction>, I>>(\n    object: I,\n  ): ProtoTransaction {\n    const message = createBaseProtoTransaction();\n    message.data =\n      object.data !== undefined && object.data !== null\n        ? ProtoTransaction_Data.fromPartial(object.data)\n        : undefined;\n    message.signature = object.signature ?? new Uint8Array();\n    message.useRlp = object.useRlp ?? false;\n    return message;\n  },\n};\n\nfunction createBaseProtoTransaction_Data(): ProtoTransaction_Data {\n  return {\n    nonce: 0,\n    epoch: 0,\n    type: 0,\n    to: new Uint8Array(),\n    amount: new Uint8Array(),\n    maxFee: new Uint8Array(),\n    tips: new Uint8Array(),\n    payload: new Uint8Array(),\n  };\n}\n\nexport const ProtoTransaction_Data = {\n  encode(\n    message: ProtoTransaction_Data,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.nonce !== 0) {\n      writer.uint32(8).uint32(message.nonce);\n    }\n    if (message.epoch !== 0) {\n      writer.uint32(16).uint32(message.epoch);\n    }\n    if (message.type !== 0) {\n      writer.uint32(24).uint32(message.type);\n    }\n    if (message.to.length !== 0) {\n      writer.uint32(34).bytes(message.to);\n    }\n    if (message.amount.length !== 0) {\n      writer.uint32(42).bytes(message.amount);\n    }\n    if (message.maxFee.length !== 0) {\n      writer.uint32(50).bytes(message.maxFee);\n    }\n    if (message.tips.length !== 0) {\n      writer.uint32(58).bytes(message.tips);\n    }\n    if (message.payload.length !== 0) {\n      writer.uint32(66).bytes(message.payload);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTransaction_Data {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint32();\n          break;\n        case 2:\n          message.epoch = reader.uint32();\n          break;\n        case 3:\n          message.type = reader.uint32();\n          break;\n        case 4:\n          message.to = reader.bytes();\n          break;\n        case 5:\n          message.amount = reader.bytes();\n          break;\n        case 6:\n          message.maxFee = reader.bytes();\n          break;\n        case 7:\n          message.tips = reader.bytes();\n          break;\n        case 8:\n          message.payload = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction_Data>, I>>(\n    object: I,\n  ): ProtoTransaction_Data {\n    const message = createBaseProtoTransaction_Data();\n    message.nonce = object.nonce ?? 0;\n    message.epoch = object.epoch ?? 0;\n    message.type = object.type ?? 0;\n    message.to = object.to ?? new Uint8Array();\n    message.amount = object.amount ?? new Uint8Array();\n    message.maxFee = object.maxFee ?? new Uint8Array();\n    message.tips = object.tips ?? new Uint8Array();\n    message.payload = object.payload ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseProtoDeployContractAttachment(): ProtoDeployContractAttachment {\n  return { CodeHash: new Uint8Array(), args: [] };\n}\n\nexport const ProtoDeployContractAttachment = {\n  encode(\n    message: ProtoDeployContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.CodeHash.length !== 0) {\n      writer.uint32(10).bytes(message.CodeHash);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoDeployContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoDeployContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.CodeHash = reader.bytes();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoDeployContractAttachment>, I>>(\n    object: I,\n  ): ProtoDeployContractAttachment {\n    const message = createBaseProtoDeployContractAttachment();\n    message.CodeHash = object.CodeHash ?? new Uint8Array();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoCallContractAttachment(): ProtoCallContractAttachment {\n  return { method: '', args: [] };\n}\n\nexport const ProtoCallContractAttachment = {\n  encode(\n    message: ProtoCallContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.method !== '') {\n      writer.uint32(10).string(message.method);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoCallContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoCallContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.method = reader.string();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoCallContractAttachment>, I>>(\n    object: I,\n  ): ProtoCallContractAttachment {\n    const message = createBaseProtoCallContractAttachment();\n    message.method = object.method ?? '';\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoTerminateContractAttachment(): ProtoTerminateContractAttachment {\n  return { args: [] };\n}\n\nexport const ProtoTerminateContractAttachment = {\n  encode(\n    message: ProtoTerminateContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    for (const v of message.args) {\n      writer.uint32(10).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTerminateContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTerminateContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<\n    I extends Exact<DeepPartial<ProtoTerminateContractAttachment>, I>,\n  >(object: I): ProtoTerminateContractAttachment {\n    const message = createBaseProtoTerminateContractAttachment();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoStoreToIpfsAttachment(): ProtoStoreToIpfsAttachment {\n  return { cid: new Uint8Array(), size: 0 };\n}\n\nexport const ProtoStoreToIpfsAttachment = {\n  encode(\n    message: ProtoStoreToIpfsAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.cid.length !== 0) {\n      writer.uint32(10).bytes(message.cid);\n    }\n    if (message.size !== 0) {\n      writer.uint32(16).uint32(message.size);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoStoreToIpfsAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoStoreToIpfsAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.cid = reader.bytes();\n          break;\n        case 2:\n          message.size = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoStoreToIpfsAttachment>, I>>(\n    object: I,\n  ): ProtoStoreToIpfsAttachment {\n    const message = createBaseProtoStoreToIpfsAttachment();\n    message.cid = object.cid ?? new Uint8Array();\n    message.size = object.size ?? 0;\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","import BN from 'bn.js';\nimport Decimal from 'decimal.js';\n\nDecimal.set({ toExpPos: 10000 });\n\nexport const DNA_BASE = '1000000000000000000';\n\nfunction isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x';\n}\n\nexport function stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\nexport function hexToUint8Array(hexString: string): Uint8Array {\n  const str = stripHexPrefix(hexString);\n\n  const arrayBuffer = new Uint8Array(str.length / 2);\n\n  for (let i = 0; i < str.length; i += 2) {\n    const byteValue = parseInt(str.substring(i, i + 2), 16);\n    arrayBuffer[i / 2] = byteValue;\n  }\n\n  return arrayBuffer;\n}\n\nexport function toHexString(\n  byteArray: Uint8Array | number[],\n  withPrefix = true,\n) {\n  return (\n    (withPrefix ? '0x' : '') +\n    Array.from(byteArray, function (byte) {\n      return `0${(byte & 0xff).toString(16)}`.slice(-2);\n    }).join('')\n  );\n}\n\nexport function floatStringToDna(value: string) {\n  const decimalValue = new Decimal(value).mul(new Decimal(DNA_BASE)).toString();\n  return new BN(decimalValue);\n}\n\nexport function dnaToFloatString(value: BN | string) {\n  const bn = new BN(value);\n  return new Decimal(bn.toString(10)).div(new Decimal(DNA_BASE)).toString();\n}\n\nexport function calculateGasCost(feePerGas: BN | string, gas: number): string {\n  const bn = new BN(feePerGas);\n  return bn.mul(new BN(gas)).toString();\n}\n","export enum EmbeddedContractType {\n  TimeLockContract = 1,\n  OracleVotingContract = 2,\n  OracleLockContract = 3,\n  RefundableOracleLockContract = 4,\n  MultisigContract = 5,\n}\n\nexport enum ContractArgumentFormat {\n  Default = 'default',\n  Byte = 'byte',\n  Int8 = 'int8',\n  Uint64 = 'uint64',\n  Int64 = 'int64',\n  String = 'string',\n  Bigint = 'bigint',\n  Hex = 'hex',\n  Dna = 'dna',\n}\n\nexport interface ContractArgument {\n  index: number;\n  format: ContractArgumentFormat;\n  value: any;\n}\n","import BN from 'bn.js';\nimport Decimal from 'decimal.js';\nimport {\n  dnaToFloatString,\n  floatStringToDna,\n  hexToUint8Array,\n  toHexString,\n} from '../../../../utils';\nimport { ContractArgument, ContractArgumentFormat } from './types';\n\nDecimal.set({ toExpPos: 10000 });\n\nexport function argumentFromBytes(\n  format: ContractArgumentFormat,\n  index: number,\n  bytes: Uint8Array,\n): ContractArgument {\n  if (bytes.length === 0) {\n    return {\n      format,\n      index,\n      value: null,\n    };\n  }\n  switch (format) {\n    case 'byte': {\n      return {\n        format: ContractArgumentFormat.Byte,\n        index: index,\n        value: bytes[0],\n      };\n    }\n    case 'int8': {\n      return {\n        format: ContractArgumentFormat.Int8,\n        index: index,\n        value: bytes[0],\n      };\n    }\n    case 'uint64': {\n      const res = Buffer.from(bytes).readBigUint64LE();\n      return {\n        format: ContractArgumentFormat.Uint64,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'int64': {\n      const res = Buffer.from(bytes).readBigInt64LE();\n      return {\n        format: ContractArgumentFormat.Int64,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'string': {\n      const res = utf8ByteArrayToString(bytes);\n      return {\n        format: ContractArgumentFormat.String,\n        index: index,\n        value: res,\n      };\n    }\n    case 'bigint': {\n      const res = new BN(bytes);\n      return {\n        format: ContractArgumentFormat.Bigint,\n        index: index,\n        value: res.toString(10),\n      };\n    }\n    case 'hex': {\n      return {\n        format: ContractArgumentFormat.Hex,\n        index: index,\n        value: toHexString(bytes),\n      };\n    }\n    case 'dna': {\n      const bn = new BN(bytes);\n      return {\n        format: ContractArgumentFormat.Dna,\n        index: index,\n        value: dnaToFloatString(bn),\n      };\n    }\n    default: {\n      return {\n        format: ContractArgumentFormat.Default,\n        index: index,\n        value: toHexString(bytes),\n      };\n    }\n  }\n}\n\nexport function argumentsFromBytes(\n  formats: ContractArgumentFormat[],\n  bytes: Uint8Array[],\n): ContractArgument[] {\n  return formats.map((format, idx) =>\n    argumentFromBytes(format, idx, bytes[idx] || new Uint8Array()),\n  );\n}\n\nexport function argumentToBytes(data: ContractArgument): Uint8Array {\n  try {\n    switch (data.format) {\n      case 'byte': {\n        const val = parseInt(data.value, 10);\n        if (val >= 0 && val <= 255) {\n          return new Uint8Array([val]);\n        }\n        throw new Error('invalid byte value');\n      }\n      case 'int8': {\n        const val = parseInt(data.value, 10);\n        if (val >= 0 && val <= 255) {\n          return new Uint8Array([val]);\n        }\n        throw new Error('invalid int8 value');\n      }\n      case 'uint64': {\n        const res = new BN(data.value);\n        if (res.isNeg()) throw new Error('invalid uint64 value');\n        const buf = Buffer.alloc(8);\n        buf.writeBigUint64LE(BigInt(res.toString()));\n        return new Uint8Array(buf);\n      }\n      case 'int64': {\n        const buf = Buffer.alloc(8);\n        buf.writeBigInt64LE(BigInt(new BN(data.value).toString()));\n        return new Uint8Array(buf);\n      }\n      case 'string': {\n        return stringToUtf8ByteArray(data.value);\n      }\n      case 'bigint': {\n        return new Uint8Array(new BN(data.value).toArray());\n      }\n      case 'hex': {\n        return new Uint8Array([...hexToUint8Array(data.value)]);\n      }\n      case 'dna': {\n        return new Uint8Array(floatStringToDna(data.value).toArray());\n      }\n      default: {\n        return new Uint8Array([...hexToUint8Array(data.value)]);\n      }\n    }\n  } catch (e) {\n    throw new Error(\n      `cannot parse ${data.format} at index ${data.index}: ${\n        (e as Error)?.message\n      }`,\n    );\n  }\n}\n\nexport function argumentsToBytes(args: ContractArgument[]): Uint8Array[] {\n  const maxIndex = Math.max(...args.map((x) => x.index));\n\n  const result: Uint8Array[] = new Array(maxIndex).fill(null);\n\n  args.forEach((element) => {\n    result[element.index] = argumentToBytes(element);\n  });\n\n  return result;\n}\n\n/**\n * Converts a JS string to a UTF-8 \"byte\" array.\n * @param {string} str 16-bit unicode string.\n * @return {!Uint8Array} UTF-8 byte array.\n */\nfunction stringToUtf8ByteArray(str: string): Uint8Array {\n  const out = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) == 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return new Uint8Array(out);\n}\n\n/**\n * Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n * @param {Uint8Array} bytes UTF-8 byte array.\n * @return {string} 16-bit Unicode string.\n */\nfunction utf8ByteArrayToString(bytes: Uint8Array): string {\n  const out = [];\n  let pos = 0;\n  let c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++] || 0;\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++] || 0;\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++] || 0;\n      const c3 = bytes[pos++] || 0;\n      const c4 = bytes[pos++] || 0;\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++] || 0;\n      const c3 = bytes[pos++] || 0;\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63),\n      );\n    }\n  }\n  return out.join('');\n}\n","import { ProtoDeployContractAttachment } from '../../../proto/models';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\nimport type {\n  ContractArgumentFormat,\n  ContractArgument,\n  EmbeddedContractType,\n} from './types';\n\nexport class DeployContractAttachment {\n  private _codeHash: EmbeddedContractType;\n  private _args: Uint8Array[];\n\n  constructor(\n    init?: Partial<{ codeHash: EmbeddedContractType; args: Uint8Array[] }>,\n  ) {\n    this._codeHash = init?.codeHash || 0;\n    this._args = init?.args || [];\n  }\n\n  public set codeHash(codeHash: number) {\n    this._codeHash = codeHash;\n  }\n\n  public get codeHash(): number {\n    return this._codeHash;\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoDeployContractAttachment.decode(bytes);\n\n    this._codeHash = protoAttachment.CodeHash[0] || 0;\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoDeployContractAttachment.fromPartial({\n      CodeHash: new Uint8Array([this._codeHash]),\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoDeployContractAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoCallContractAttachment } from '../../../proto/models';\nimport type { ContractArgument, ContractArgumentFormat } from './types';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\n\nexport class CallContractAttachment {\n  private _method: string;\n  private _args: Uint8Array[];\n\n  constructor(init?: Partial<{ method: string; args: Uint8Array[] }>) {\n    this._method = init?.method || '';\n    this._args = init?.args || [];\n  }\n\n  public set method(method: string) {\n    this._method = method;\n  }\n\n  public get method(): string {\n    return this._method;\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n    return this;\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoCallContractAttachment.decode(bytes);\n\n    this._method = protoAttachment.method;\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoCallContractAttachment.fromPartial({\n      method: this._method,\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoCallContractAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoTerminateContractAttachment } from '../../../proto/models';\nimport type { ContractArgument, ContractArgumentFormat } from './types';\nimport { argumentsFromBytes, argumentsToBytes } from './utils';\n\nexport class TerminateContractAttachment {\n  private _args: Uint8Array[];\n\n  constructor(init?: Partial<{ args: Uint8Array[] }>) {\n    this._args = init?.args || [];\n  }\n\n  public set args(args: Uint8Array[]) {\n    this._args = args;\n  }\n\n  public get args(): Uint8Array[] {\n    return this._args;\n  }\n\n  public getArgs(formats: ContractArgumentFormat[]): ContractArgument[] {\n    return argumentsFromBytes(formats, this._args);\n  }\n\n  public setArgs(args: ContractArgument[]) {\n    this._args = argumentsToBytes(args);\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoTerminateContractAttachment.decode(bytes);\n\n    this._args = protoAttachment.args;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoTerminateContractAttachment.fromPartial({\n      args: this._args.map((x) => x || new Uint8Array()),\n    });\n    return ProtoTerminateContractAttachment.encode(attachment).finish();\n  }\n}\n","import sha3 from 'js-sha3';\nimport { hexToUint8Array, toHexString } from './utils';\nimport secp256k1 from 'secp256k1';\n\nfunction getKeyArray(key: Uint8Array | number[] | string): Uint8Array {\n  return typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key);\n}\n\nexport function privateKeyToPublicKey(\n  key: Uint8Array | number[] | string,\n  withPrefix = false,\n) {\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n  return toHexString(pubKey, withPrefix);\n}\n\nexport function publicKeyToAddress(\n  publicKey: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  return toHexString(\n    sha3.keccak_256.array(getKeyArray(publicKey).slice(1)).slice(12),\n    withPrefix,\n  );\n}\n\nexport function privateKeyToAddress(\n  key: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  if (!key) {\n    return '0x0000000000000000000000000000000000000000';\n  }\n\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sender(\n  data: Uint8Array | number[],\n  signature: Uint8Array | number[],\n  withPrefix = true,\n) {\n  const hash = sha3.keccak_256.array(data);\n  const pubKey = secp256k1.ecdsaRecover(\n    new Uint8Array(signature).slice(0, -1),\n    Number(signature[signature.length - 1]),\n    new Uint8Array(hash),\n    false,\n  );\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sign(\n  data: Uint8Array | number[],\n  key: Uint8Array | number[] | string,\n): Uint8Array {\n  const hash = sha3.keccak_256.array(data);\n  const { signature, recid } = secp256k1.ecdsaSign(\n    new Uint8Array(hash),\n    typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key),\n  );\n\n  return new Uint8Array([...signature, recid]);\n}\n","import { ProtoStoreToIpfsAttachment } from '../../proto/models';\nimport type { EmbeddedContractType } from './contracts/types';\n\nexport class StoreToIpfsAttachment {\n  private _size: number;\n  private _cid: Uint8Array;\n\n  constructor(init?: Partial<{ size: EmbeddedContractType; cid: Uint8Array }>) {\n    this._size = init?.size || 0;\n    this._cid = init?.cid || new Uint8Array();\n  }\n\n  public set size(size: number) {\n    this._size = size;\n  }\n\n  public get size(): number {\n    return this._size;\n  }\n\n  public set cid(cid: Uint8Array) {\n    this._cid = cid;\n  }\n\n  public get cid(): Uint8Array {\n    return this._cid;\n  }\n\n  public fromBytes(bytes: Uint8Array) {\n    const protoAttachment = ProtoStoreToIpfsAttachment.decode(bytes);\n\n    this._cid = protoAttachment.cid;\n    this._size = protoAttachment.size;\n\n    return this;\n  }\n\n  public toBytes() {\n    const attachment = ProtoStoreToIpfsAttachment.fromPartial({\n      cid: this._cid,\n      size: this._size,\n    });\n    return ProtoStoreToIpfsAttachment.encode(attachment).finish();\n  }\n}\n","import { ProtoTransaction, ProtoTransaction_Data } from '../proto/models';\nimport BN from 'bn.js';\nimport { floatStringToDna, hexToUint8Array, toHexString } from '../../utils';\nimport sha3 from 'js-sha3';\nimport { sender, sign } from '../../crypto';\nimport type { JsonTransaction } from '../json';\nimport { StoreToIpfsAttachment } from './attachments/storeToIpfsAttachment';\n\nexport enum TransactionType {\n  SendTx = 0x0,\n  ActivationTx = 0x1,\n  InviteTx = 0x2,\n  KillTx = 0x3,\n  SubmitFlipTx = 0x4,\n  SubmitAnswersHashTx = 0x5,\n  SubmitShortAnswersTx = 0x6,\n  SubmitLongAnswersTx = 0x7,\n  EvidenceTx = 0x8,\n  OnlineStatusTx = 0x9,\n  KillInviteeTx = 0xa,\n  ChangeGodAddressTx = 0xb,\n  BurnTx = 0xc,\n  ChangeProfileTx = 0xd,\n  DeleteFlipTx = 0xe,\n  DeployContractTx = 0xf,\n  CallContractTx = 0x10,\n  TerminateContractTx = 0x11,\n  DelegateTx = 0x12,\n  UndelegateTx = 0x13,\n  KillDelegatorTx = 0x14,\n  StoreToIpfsTx = 0x15,\n}\n\nexport class Transaction {\n  private _nonce = 0;\n  private _epoch = 0;\n  private _type: TransactionType | number = 0;\n  private _to: Uint8Array | null = null;\n  private _amount: BN | null = null;\n  private _maxFee: BN | null = null;\n  private _tips: BN | null = null;\n  private _payload: Uint8Array | null = null;\n\n  private _signature: Uint8Array | null = null;\n\n  constructor(\n    init?: Partial<{\n      nonce: number;\n      epoch: number;\n      type: TransactionType;\n      to: Uint8Array | string;\n      amount: Uint8Array | string | number | BN;\n      maxFee: Uint8Array | string | number | BN;\n      tips: Uint8Array | string | number | BN;\n      payload: Uint8Array | number[];\n    }>,\n  ) {\n    this.nonce = init?.nonce ?? 0;\n    this.epoch = init?.epoch ?? 0;\n    this.type = init?.type ?? 0;\n    this.to = init?.to ?? null;\n    this.amount = init?.amount ?? null;\n    this.maxFee = init?.maxFee ?? null;\n    this.tips = init?.tips ?? null;\n    this.payload = init?.payload ? new Uint8Array(init.payload) : null;\n  }\n\n  public set nonce(nonce: number) {\n    this._nonce = nonce;\n  }\n\n  public get nonce(): number {\n    return this._nonce;\n  }\n\n  public set epoch(epoch: number) {\n    this._epoch = epoch;\n  }\n\n  public get epoch(): number {\n    return this._epoch;\n  }\n\n  public set type(type: TransactionType) {\n    this._type = type;\n  }\n\n  public get type(): number {\n    return this._type;\n  }\n\n  public set to(to: string | Uint8Array | null) {\n    if (to === null) this._to = null;\n    else if (to instanceof Uint8Array) this._to = to;\n    else this._to = hexToUint8Array(to);\n  }\n\n  public get to(): string | null {\n    return this._to && this._to.length > 0 ? toHexString(this._to, true) : null;\n  }\n\n  public set amount(amount: number | string | BN | Uint8Array | null) {\n    this._amount = amount !== null ? new BN(amount) : null;\n  }\n\n  public get amount(): BN | null {\n    return this._amount;\n  }\n\n  public set maxFee(maxFee: number | string | BN | Uint8Array | null) {\n    this._maxFee = maxFee !== null ? new BN(maxFee) : null;\n  }\n\n  public get maxFee(): BN | null {\n    return this._maxFee;\n  }\n\n  public set tips(tips: number | string | BN | Uint8Array | null) {\n    this._tips = tips !== null ? new BN(tips) : null;\n  }\n\n  public get tips(): BN | null {\n    return this._tips;\n  }\n\n  public set payload(payload: Uint8Array | null) {\n    this._payload = payload;\n  }\n\n  public get payload(): Uint8Array | null {\n    return this._payload ? new Uint8Array(this._payload) : null;\n  }\n\n  public get signature(): Uint8Array | null {\n    return this._signature;\n  }\n\n  get hash() {\n    return Buffer.from(sha3.keccak_256.array(this.toBytes())).toString('hex');\n  }\n\n  get sender() {\n    try {\n      if (!this._signature || this._signature.length === 0) return null;\n\n      const data = ProtoTransaction_Data.encode(\n        this._createProtoTxData(),\n      ).finish();\n\n      return sender(data, this._signature, true);\n    } catch {\n      return null;\n    }\n  }\n\n  get gas() {\n    const bytes = this.toBytes();\n    let size = bytes.length;\n    if (!this._signature || this._signature.length === 0) size += 67;\n    if (this.type === TransactionType.DeleteFlipTx) size += 1024 * 120;\n    if (this.type === TransactionType.StoreToIpfsTx) {\n      const maxSize = 1024 * 1024;\n      try {\n        if (this.payload) {\n          const attachment = new StoreToIpfsAttachment().fromBytes(\n            this.payload,\n          );\n          size += attachment.size * 0.2 || maxSize;\n        } else {\n          size += maxSize;\n        }\n      } catch (e) {\n        size += maxSize;\n      }\n    }\n    return ~~size * 10;\n  }\n\n  static fromHex(hex: string): Transaction {\n    return new Transaction().fromHex(hex);\n  }\n\n  static fromBytes(bytes: Uint8Array): Transaction {\n    return new Transaction().fromBytes(bytes);\n  }\n\n  public fromHex(hex: string): Transaction {\n    return this.fromBytes(hexToUint8Array(hex));\n  }\n\n  public fromBytes(bytes: Uint8Array): Transaction {\n    const protoTx = ProtoTransaction.decode(bytes);\n    const protoTxData = protoTx.data;\n\n    if (protoTxData) {\n      this.nonce = protoTxData.nonce;\n      this.epoch = protoTxData.epoch;\n      this.type = protoTxData.type;\n      this.to = protoTxData.to;\n      this.amount = protoTxData.amount;\n      this.maxFee = protoTxData.maxFee;\n      this.tips = protoTxData.tips;\n      this.payload = protoTxData.payload;\n    }\n\n    this._signature = protoTx.signature;\n\n    return this;\n  }\n\n  public fromJson(jsonTx: JsonTransaction): Transaction {\n    function getTxType(type: string): TransactionType {\n      if (!type?.length) return TransactionType.SendTx;\n      const stringType = type[0]?.toUpperCase() + type.slice(1) + 'Tx';\n      return <TransactionType>(\n        (Object.entries(TransactionType).find(\n          ([key]) => key === stringType,\n        )?.[1] || TransactionType.SendTx)\n      );\n    }\n\n    this.nonce = jsonTx.nonce;\n    this.epoch = jsonTx.epoch;\n    this.type = getTxType(jsonTx.type);\n    this.to = jsonTx.to;\n    this.amount = floatStringToDna(jsonTx.amount);\n    this.maxFee = floatStringToDna(jsonTx.maxFee);\n    this.tips = floatStringToDna(jsonTx.tips);\n    this.payload = hexToUint8Array(jsonTx.payload);\n\n    return this;\n  }\n\n  public toBytes(): Uint8Array {\n    const tx = ProtoTransaction.fromPartial({\n      data: this._createProtoTxData(),\n      signature: this._signature ?? new Uint8Array(),\n    });\n    return ProtoTransaction.encode(tx).finish();\n  }\n\n  public sign(key: string | Uint8Array | number[]): Transaction {\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n    this._signature = sign(data, key);\n    return this;\n  }\n\n  public toHex(withPrefix = true): string {\n    return toHexString(this.toBytes(), withPrefix);\n  }\n\n  private _createProtoTxData(): ProtoTransaction_Data {\n    return ProtoTransaction_Data.fromPartial({\n      epoch: this._epoch,\n      nonce: this._nonce,\n      type: this._type,\n      to: this._to ?? new Uint8Array(),\n      amount: new Uint8Array(\n        !this._amount || this._amount.isZero() ? [] : this._amount.toArray(),\n      ),\n      maxFee: new Uint8Array(\n        !this._maxFee || this._maxFee.isZero() ? [] : this._maxFee.toArray(),\n      ),\n      tips: new Uint8Array(\n        !this._tips || this._tips.isZero() ? [] : this._tips.toArray(),\n      ),\n      payload: this._payload ?? new Uint8Array(),\n    });\n  }\n}\n","export class JsonBlock {\n  constructor(\n    public coinbase: string,\n    public hash: string,\n    public parentHash: string,\n    public height: number,\n    public root: string,\n    public identityRoot: string,\n    public ipfsCid: string,\n    public transactions: string[],\n    public flags: string[],\n    public isEmpty: boolean,\n    public offlineAddress: string,\n  ) {}\n}\n\nexport class JsonTransaction {\n  constructor(\n    public hash: string,\n    public type: string,\n    public from: string,\n    public to: string,\n    public amount: string,\n    public tips: string,\n    public maxFee: string,\n    public nonce: number,\n    public epoch: number,\n    public payload: string,\n    public blockHash: string,\n    public usedFee: string,\n    public timestamp: number,\n  ) {}\n}\n\nexport class JsonReceipt {\n  constructor(\n    public contract: string,\n    public method: string,\n    public success: boolean,\n    public gasUsed: number,\n    public txHash: string,\n    public error: string,\n    public gasCost: string,\n    public txFee: number,\n  ) {}\n}\n\nexport class JsonBalance {\n  constructor(\n    public stake: string,\n    public balance: string,\n    public nonce: number,\n    public mempoolNonce: number,\n  ) {}\n}\n\nclass JsonFlipWords {\n  constructor(\n    public words: number[],\n    public used: boolean,\n    public id: number,\n  ) {}\n}\n\nclass JsonTxAddr {\n  constructor(public TxHash: string, public Address: string) {}\n}\n\nclass JsonInviter {\n  constructor(\n    public txHash: string,\n    public address: string,\n    public epochHeight: number,\n  ) {}\n}\n\nexport class JsonIdentity {\n  constructor(\n    public address: string,\n    public profileHash: string,\n    public stake: string,\n    public invites: number,\n    public age: number,\n    public state: string,\n    public pubkey: string,\n    public requiredFlips: number,\n    public availableFlips: number,\n    public flipKeyWordPairs: JsonFlipWords[],\n    public madeFlips: number,\n    public totalQualifiedFlips: number,\n    public totalShortFlipPoints: number,\n    public flips: string[],\n    public online: boolean,\n    public generation: number,\n    public code: string,\n    public invitees: JsonTxAddr[],\n    public penalty: string,\n    public lastValidationFlags: string[],\n    public delegatee: string,\n    public delegationEpoch: number,\n    public delegationNonce: number,\n    public isPool: boolean,\n    public inviter: JsonInviter,\n    public shardId: number,\n  ) {}\n}\n\nexport class JsonEpoch {\n  constructor(\n    public startBlock: number,\n    public epoch: number,\n    public nextValidation: string,\n    public currentPeriod: string,\n  ) {}\n}\n\nexport class JsonIterateMapItem {\n  constructor(public key: string, public value: string) {}\n}\nexport class JsonIterateMap {\n  constructor(\n    public items: JsonIterateMapItem[],\n    public continuationToken: string,\n  ) {}\n}\n","import axios from 'axios';\n\nexport function createAxiosInstance(url: string, apiKey: string) {\n  const res = axios.create({ baseURL: url });\n  res.interceptors.request.use(function (config) {\n    config.data.key = apiKey;\n    return config;\n  });\n  return res;\n}\n","import type { AxiosInstance } from 'axios';\nimport axios from 'axios';\n\nexport class BaseProvider {\n  protected _httpProvider: AxiosInstance;\n\n  constructor(httpProvider: AxiosInstance) {\n    this._httpProvider = httpProvider;\n  }\n\n  public async doRequest(obj: { method: string; params: any; id?: number }) {\n    try {\n      if (!obj.id) obj.id = 1;\n\n      const { data } = await this._httpProvider.post('/', obj);\n\n      const { result, error } = data;\n      if (error) throw new Error(error.message);\n\n      return result;\n    } catch (e) {\n      if (axios.isAxiosError(e)) {\n        if (e.response) {\n          throw new Error(e.response.data as any);\n        } else if (e.request) {\n          throw new Error('node is unavailable');\n        } else throw new Error(e.message);\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n","import { Transaction, TransactionType } from '../models';\nimport type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\nimport { toHexString } from '../utils';\nimport type { JsonBlock, JsonTransaction, JsonReceipt } from '../models/json';\n\nexport class BcnProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new BcnProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async buildTx(\n    data: Partial<{\n      from: string;\n      to: string;\n      epoch: number;\n      nonce: number;\n      type: TransactionType;\n      amount: string;\n      maxFee: string;\n      tips: string;\n      payload: number[] | Uint8Array;\n    }>,\n  ): Promise<Transaction> {\n    const params: any = data;\n    if (data.payload) params.payload = toHexString(data.payload);\n    params.useProto = true;\n\n    const result = await this.doRequest({\n      method: 'bcn_getRawTx',\n      params: [params],\n    });\n    return new Transaction().fromHex(result);\n  }\n\n  public async sendTx(tx: Transaction): Promise<string> {\n    const result = await this.doRequest({\n      method: 'bcn_sendRawTx',\n      params: [tx.toHex(true)],\n    });\n\n    return result;\n  }\n\n  public async estimateTx(\n    tx: Transaction,\n  ): Promise<{ receipt: JsonReceipt; txHash: string; txFee: string }> {\n    const result = await this.doRequest({\n      method: 'bcn_estimateRawTx',\n      params: [tx.toHex(true)],\n    });\n\n    return result;\n  }\n\n  public async blockAt(num: number): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_blockAt',\n      params: [num],\n    });\n\n    return result;\n  }\n\n  public async block(hash: string): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_block',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async lastBlock(): Promise<JsonBlock> {\n    const result = await this.doRequest({\n      method: 'bcn_lastBlock',\n      params: [],\n    });\n\n    return result;\n  }\n\n  public async transaction(hash: string): Promise<JsonTransaction> {\n    const result = await this.doRequest({\n      method: 'bcn_transaction',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async receipt(hash: string): Promise<JsonReceipt> {\n    const result = await this.doRequest({\n      method: 'bcn_txReceipt',\n      params: [hash],\n    });\n\n    return result;\n  }\n\n  public async feePerGas(): Promise<string> {\n    const result = await this.doRequest({\n      method: 'bcn_feePerGas',\n      params: [],\n    });\n\n    return result;\n  }\n}\n","import type {\n  ContractArgument,\n  ContractArgumentFormat,\n  JsonIterateMap,\n} from '../models';\nimport type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\n\nexport class ContractProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new ContractProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async readData(\n    address: string,\n    key: string,\n    format: ContractArgumentFormat,\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readData',\n      params: [address, key, format],\n    });\n\n    return result;\n  }\n\n  public async readonlyCall(\n    address: string,\n    method: string,\n    format: ContractArgumentFormat,\n    args: ContractArgument[],\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readonlyCall',\n      params: [{ contract: address, method, format, args }],\n    });\n\n    return result;\n  }\n\n  public async readMap(\n    address: string,\n    mapName: string,\n    key: string,\n    format: ContractArgumentFormat,\n  ): Promise<string> {\n    const result = await this.doRequest({\n      method: 'contract_readMap',\n      params: [address, mapName, key, format],\n    });\n\n    return result;\n  }\n\n  public async iterateMap(\n    address: string,\n    mapName: string,\n    keyFormat: ContractArgumentFormat,\n    valueFormat: ContractArgumentFormat,\n    limit = 10,\n    continuationToken = '0x',\n  ): Promise<JsonIterateMap> {\n    const result = await this.doRequest({\n      method: 'contract_iterateMap',\n      params: [\n        address,\n        mapName,\n        continuationToken,\n        keyFormat,\n        valueFormat,\n        limit,\n      ],\n    });\n\n    return result;\n  }\n}\n","import type { AxiosInstance } from 'axios';\nimport { createAxiosInstance } from './utils';\nimport { BaseProvider } from './provider';\nimport type { JsonBalance, JsonEpoch, JsonIdentity } from '../models';\n\nexport class DnaProvider extends BaseProvider {\n  static create(url: string, apiKey: string) {\n    return new DnaProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n  }\n\n  public async balance(address: string): Promise<JsonBalance> {\n    const result = await this.doRequest({\n      method: 'dna_getBalance',\n      params: [address],\n    });\n\n    return result;\n  }\n\n  public async identity(address?: string): Promise<JsonIdentity> {\n    const result = await this.doRequest({\n      method: 'dna_identity',\n      params: address ? [address] : [],\n    });\n\n    return result;\n  }\n\n  public async epoch(): Promise<JsonEpoch> {\n    const result = await this.doRequest({\n      method: 'dna_epoch',\n      params: [],\n    });\n\n    return result;\n  }\n}\n","import type { AxiosInstance } from 'axios';\nimport { BcnProvider } from './bcnProvider';\nimport { ContractProvider } from './contractProvider';\nimport { DnaProvider } from './dnaProvider';\nimport { BaseProvider } from './provider';\nimport { createAxiosInstance } from './utils';\n\nexport class IdenaProvider extends BaseProvider {\n  private _bcnProvider: BcnProvider;\n  private _contractProvider: ContractProvider;\n  private _dnaProvider: DnaProvider;\n\n  public get Blockchain(): BcnProvider {\n    return this._bcnProvider;\n  }\n\n  public get Contract(): ContractProvider {\n    return this._contractProvider;\n  }\n\n  public get Dna(): DnaProvider {\n    return this._dnaProvider;\n  }\n\n  static create(url: string, apiKey: string): IdenaProvider {\n    return new IdenaProvider(createAxiosInstance(url, apiKey));\n  }\n\n  constructor(httpProvider: AxiosInstance) {\n    super(httpProvider);\n    this._bcnProvider = new BcnProvider(httpProvider);\n    this._contractProvider = new ContractProvider(httpProvider);\n    this._dnaProvider = new DnaProvider(httpProvider);\n  }\n}\n"],"names":[],"mappings":"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"}